// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Models
model User {
  id                 String              @id @default(uuid()) @db.Uuid
  name               String
  last_name          String
  email              String              @unique
  password           String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  apiKeys            Apikey[]
  token_balances     Token_balance[]
  token_transactions Token_transaction[]
}

model Apikey {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  key       String   @unique
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token_balance {
  id        String   @id @default(uuid()) @db.Uuid
  amount    Float
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Transaction_type {
  GENERATED
  PURCHASED
  TRANSFERRED_IN
  TRANSFERRED_OUT
  SPENT
  REFUNDED
  EXPIRED
  AWARDED
}

model Token_transaction {
  id          String   @id @default(uuid()) @db.Uuid
  amount      Float
  type        Transaction_type
  description String?
  metadata    Json?
  userId      String   @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
